---
$schema: "/.meta/.schemas/guides.json"
title: Hello World. Your First Vector Pipeline.
description: Building your very first Vector pipeline, the "Hello World" of Vector tutorials.
series_position: 1
author_github: https://github.com/Jeffail
tags: ["domain: config"]
---

Vector is a simple beast to tame, in this guide we'll send an
[event][docs.data-model] through it and touch on some basic concepts.

## 1. Install Vector

If you haven't already, install Vector. Here's a script for the lazy:

```bash
curl --proto '=https' --tlsv1.2 -sSf https://sh.vector.dev | sh
```

Or [choose your preferred installation method][docs.installation].

## 2. Configure it

Vector runs with a [configuration file][docs.configuration] that tells it which
components to run and how they should interact. Let's create one that simply
pipes a [`stdin` source][docs.sources.stdin] to a
[`console` sink][docs.sinks.console]:

<CodeHeader fileName="vector.toml" />

```toml
[sources.foo]
  type = "stdin"

[sinks.bar]
  inputs = ["foo"]
  type = "console"
  encoding.codec = "text"
```

Every component within a Vector config has an identifier chosen by you. This
allows you to specify where a sink should gather its data from (using the
`inputs` field).

That's it for our first config, now pipe an event through it:

```bash
echo '172.128.80.109 - Bins5273 656 [2019-05-03T13:11:48-04:00] "PUT /mesh" 406 10272' | vector --config ./vector.toml
```

Your input event will get echoed back (along with some service logs) unchanged:

```text
... some logs ...
172.128.80.109 - Bins5273 656 [2019-05-03T13:11:48-04:00] "PUT /mesh" 406 10272
```

That's because the raw input text of our source was captured internally within
the field `message`, and the `text` `encoding.codec` option of our sink prints
the raw contents of `message` only. These field names can be controlled via the
[global `log_schema` options][docs.reference.global-options#log_schema].

<Alert type="info">

Hey, kid, if you want to see something cool try setting `encoding.codec = "json"`
in the sink config.

</Alert>

## Next Steps

If you expected something more interesting to happen then that's on you. The
text came out unchanged because we didn't ask Vector to change it, we can remedy
that by following the next guide in the series: [Structuring Your Log Data][guides.getting-started.structuring].
